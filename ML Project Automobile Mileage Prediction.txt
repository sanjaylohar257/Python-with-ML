#import pandas, matplotlib, seaborn, sklearn

#import data

#print head, tail

#print the number of rows and columns

#check data types

#If a numeric variable is stored as object then change the data type to numeric

# Check data types again to ensure that the type conversion has been done

# Missing value imputation

#check if there are missing values

#impute missing values


#check missing values again to ensure that there are no missing values in the data

# create boxplots to check outliers

# write a function to remove outliers

# create boxplots to check that outliers are removed

#------- Start EDA (Exploratory Data Analysis) --------------
#Check the distribution of Horsepower
#Check the distribution of Weight
#Check the distribution of Acceleration

#Scatter plot to find the correlation betweeen MPG and Acceleration
#Scatter plot to find the correlation betweeen MPG and Horsepower
#Scatter plot to find the correlation betweeen MPG and Weight

#Barplots:
 #No. of cars by cylinders
 #No. of cars by Origin

-------------------------End of EDA ------------------------

#Check unique values in Origin variable

#Replace 1 with US, 2 with Germany, 3 with Japan

#Print unique entries from origin column again

#Cylinders is a categorical variable hence change Cylinders to Object 

# Feature Selection: Print Correlation heatmap

# One-hot encoding (dummy conversion)

#Create master data by combining numeric columns and dummies

# Create X and Y

#Export data from X to and excel file to see the final data

# import library to split the training-test sample
# from sklearn.model_selection import train_test_split

# Split the data into training and test sample [Random Sampling]

# Print the sample size

#import library for linear regression
# from sklearn.linear_model import LinearRegression

#create a model object

# fit the model

#Goodness of fit test: check the accuracy ot training model

#predict y

#check prediction accuracy based on test sample


